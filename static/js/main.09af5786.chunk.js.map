{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","getCountPages","totalItems","countItemsInGroup","Math","ceil","getFirstItemGroup","currentPage","countItems","total","arguments","length","undefined","number","getLastItemGroup","Pagination","_ref","perPage","onPageChange","items","map","concat","_jsxs","_Fragment","children","className","_jsx","role","cn","disabled","onClick","href","num","active","value","event","currentTarget","slice","item","App","options","_useState","useState","_useState2","_slicedToArray","setCountItems","_useState3","_useState4","setCurrentPage","id","onChange","target","option","htmlFor","page","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.09af5786.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n\nexport function getCountPages(totalItems: number, countItemsInGroup: number) {\n  return Math.ceil(totalItems / countItemsInGroup);\n}\n\nexport function getFirstItemGroup(\n  currentPage: number,\n  countItems: number,\n  total = 42,\n) {\n  const number = (currentPage - 1) * countItems;\n\n  return number <= total\n    ? number\n    : 1;\n}\n\nexport function getLastItemGroup(\n  currentPage: number,\n  countItems: number,\n  total = 42,\n) {\n  const number = (currentPage - 1) * countItems + countItems;\n\n  return number <= total\n    ? number\n    : total;\n}\n","import React from 'react';\nimport cn from 'classnames';\n\nimport {\n  getCountPages,\n  getFirstItemGroup,\n  getLastItemGroup,\n  getNumbers,\n} from '../../utils';\n\ntype Props = {\n  total: number,\n  perPage: number,\n  currentPage: number,\n  onPageChange: (page: number) => void,\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const items = getNumbers(1, total)\n    .map(n => `Item ${n}`);\n\n  return (\n    <>\n      <ul className=\"pagination\">\n        <li\n          role=\"presentation\"\n          className={cn('page-item', {\n            disabled: currentPage === 1,\n          })}\n          onClick={() => {\n            if (currentPage !== 1) {\n              onPageChange(currentPage - 1);\n            }\n          }}\n        >\n          <a\n            data-cy=\"prevLink\"\n            className=\"page-link\"\n            href=\"#prev\"\n            aria-disabled={currentPage === 1}\n          >\n            «\n          </a>\n        </li>\n\n        {getNumbers(1, getCountPages(total, perPage)).map(num => (\n          <li\n            key={num}\n            role=\"presentation\"\n            className={cn('page-item', {\n              active: num === currentPage,\n            })}\n            value={num}\n            onClick={(event) => onPageChange(+event.currentTarget.value)}\n          >\n            <a data-cy=\"pageLink\" className=\"page-link\" href=\"#{num}\">\n              {num}\n            </a>\n          </li>\n        ))}\n\n        <li\n          role=\"presentation\"\n          className={cn('page-item', {\n            disabled: currentPage === getCountPages(total, perPage),\n          })}\n          onClick={() => {\n            if (currentPage !== getCountPages(total, perPage)) {\n              onPageChange(currentPage + 1);\n            }\n          }}\n        >\n          <a\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            href=\"#next\"\n            aria-disabled={currentPage === getCountPages(total, perPage)}\n          >\n            »\n          </a>\n        </li>\n      </ul>\n\n      {\n        items.slice(\n          getFirstItemGroup(currentPage, perPage),\n          getLastItemGroup(currentPage, perPage),\n        )\n          .map(item => (\n            <li key={item} data-cy=\"item\">{item}</li>\n          ))\n      }\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\n\nimport { Pagination } from './components/Pagination';\nimport { getFirstItemGroup, getLastItemGroup } from './utils';\n\nconst total = 42;\n\nexport const App: React.FC = () => {\n  const options = [3, 5, 10, 20];\n\n  const [countItems, setCountItems] = useState(options[1]);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const handleChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setCountItems(+event.target.value);\n    setCurrentPage(1);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${getFirstItemGroup(currentPage, countItems, total) + 1} - ${getLastItemGroup(currentPage, countItems, total)} of ${total})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={countItems}\n            onChange={handleChange}\n          >\n            {options.map(option => (\n              <option\n                key={option}\n                value={option}\n              >\n                {option}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n      <Pagination\n        total={total}\n        perPage={countItems}\n        currentPage={currentPage}\n        onPageChange={(page: number) => {\n          if (page > 0 && Math.ceil(total / countItems)) {\n            setCurrentPage(page);\n          }\n        }}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}